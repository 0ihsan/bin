#!/usr/bin/env python3

import re
from sys import stdin
from sha3 import keccak_256

ethtype = {
    "uint256": lambda x: format(x,'x'),
    "address": lambda x: x.zfill(64)
}

def fixedlen(x):
    return x.zfill(64)

def f(prototype: str):
    """
    >>> balance_function = f('balanceOf(address)')
    """
    prototype = prototype.replace(', ', ',')
    def g(*args):
        selector = '0x'+keccak_256(prototype.encode()).hexdigest()[:8]
        args     = ''.join(map(fixedlen, args))
        return selector+args
    return g

if __name__ == '__main__':
    for line in stdin:
        prototype, params = line.split(')', 1)
        prototype += ')'
        typestr = re.sub(r'^\w+', '', prototype).replace('(','').replace(')','')
        types = typestr.split(',')
        print(types)
        # function = f(prototype)
        # params = params[1:-2].replace(', ', ',').replace("'", '').split(',')
        # print(function(*params))
