#!/usr/bin/env python3
"""
eksi - eksisozluk.com unofficial cli

license: MIT
"""

import argparse
import asyncio
import sys
from bs4 import BeautifulSoup
import htmlmin
import aiohttp

NORMAL      = "\033[31m"
RED         = "\033[31m"
GREEN       = "\033[32m"
YELLOW      = "\033[33m"
BLUE        = "\033[34m"
PURPLE      = "\033[35m"
AQUA        = "\033[36m"
LIGHTGRAY   = "\033[37m"
GRAY        = "\033[90m"
LIGHTRED    = "\033[91m"
LIGHTGREEN  = "\033[92m"
LIGHTYELLOW = "\033[93m"
LIGHTBLUE   = "\033[94m"
LIGHTPURPLE = "\033[95m"
LIGHTAQUA   = "\033[96m"
WHITE       = "\033[97m"
RESET       = "\033[00m"


def title_rate(title):
    "eksi title rate clean filter"
    found = title.find('small')
    found = found.text if found is not None else 0
    if ',' in str(found):
        return int(float(found.replace(',', '.').replace('b', ''))*1000)
    else:
        return int(found)


async def main():
    """main entry point for this script"""

    parser = argparse.ArgumentParser()
    parser.add_argument('-s', '--sort',  dest='sortby') # best, today, pop
    parser.add_argument('-g', '--gundem', action='store_true')
    arg = parser.parse_args()

    url = 'https://eksisozluk.com/'

    opt = "?"
    opt += "a=nice"      if arg.sortby in ["best","fav","favorite"] else ""
    opt += "a=dailynice" if arg.sortby in ["today","bugun"]         else ""
    opt += "a=popular"   if arg.sortby in ["pop", "popular"]        else ""

    async with aiohttp.ClientSession() as session:

        if arg.gundem:
            async with session.get(url) as resp:
                response_text = await resp.text()
                soup = BeautifulSoup(response_text, 'html.parser')
                titles_containr = soup.find("ul",{'class':'topic-list partial'})
                titles = filter(lambda t: t.get('id') is None,
                                titles_containr.find_all('li'))
                if arg.sortby in ["best"]:
                    titles = sorted(titles, reverse=True, key=title_rate)
                for title in titles:
                    print(htmlmin.minify(str(title)))

        else:
            for query in sys.stdin.readlines():
                query = query.replace(' ', '+')
                async with session.get(url+query+opt) as resp:
                    response_text = await resp.text()
                    if 'böyle bir şey yok.' in response_text:
                        print(f"{RED}böyle bir şey yok.{RESET}",file=sys.stderr)
                    else:
                        soup = BeautifulSoup(response_text, 'html.parser')
                        entries_containr = soup.find(id='entry-item-list')
                        entries = entries_containr.find_all('li')
                        if arg.sortby in ["best","fav","favorite","favourite"]:
                            entries = sorted(entries, reverse=True,
                            key=lambda entry: int(entry["data-favorite-count"]))
                        for entry in entries:
                            print(htmlmin.minify(str(entry)))

if __name__ == '__main__':

    loop = asyncio.get_event_loop()
    loop.run_until_complete(main())
